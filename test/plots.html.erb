<html>

<head>
  <title>Nadocast compared to SPC Outlooks</title>
  <style>
    body { margin: 0 }
    .hidden { display: none }
    *:not(h1) { font-size: 24px; font-weight: bold; color: darkblue; }
    .desc { font-family: "DejaVu Sans", sans-serif; font-weight: normal; color: black; width: 50%; }
    label, select option { font-weight: normal; }
    label { cursor: pointer }
    .options > span { display: inline-block; margin-right: 1em; }
    img { min-height: 100px; max-width: 960px; } /* lazy load fewer images at once */
  </style>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<%
  require "chunky_png"

  HAZARDS = [
    ["tornado",      "Tor"],
    ["wind",         "Wind"],
    ["wind_adj",     "Wind_Adj"],
    ["hail",         "Hail"],
    ["sig_tornado",  "Sigtor"],
    ["sig_wind",     "Sigwind"],
    ["sig_wind_adj", "Sigwind_Adj"],
    ["sig_hail",     "Sighail"],
  ]
  SIG_HAZARDS    = HAZARDS.select { |hazard, _| hazard =~ /sig_/ }
  NONSIG_HAZARDS = HAZARDS - SIG_HAZARDS
%>

<body>
  <div style="position:fixed; top:0; width: 100%; z-index: 1; background: white; border-bottom: solid 3px black; padding: 0.5em">
    <h1>Nadocast "2022 Models" compared to SPC Outlooks, Objective Plots</h1>
    <p>(Subjective maps <a href="index.html">here</a>.) Dates used are not in the training data. Only regions that produce >=1 tor and wind and hail report over 1998-2013 (view this mask <a href="https://github.com/brianhempel/nadocast/blob/293f8f2a33b4f4e53e98e39c108c8e05f036874b/climatological_background_1998-2013/verifiable_area_mask.pdf">here</a>) and are in the CONUS are used for verification.</p>
    <p class="options">
      <span>Plot:
      <label><input type="checkbox" name="kind" value="performance">Performance</label>
      <label><input type="checkbox" name="kind" value="reliability">Reliability</label>
      <label><input type="checkbox" name="kind" value="roc">ROC</label>
      </span>
      <span>Filter:
      <% HAZARDS.each do |hazard_name, hazard_title| %>
        <label><input type="checkbox" name="hazard" value="<%= hazard_name %>"><%= hazard_title %></label>
      <% end %>
      </span>
      <span>Version:
      <label><input type="radio" name="version" value="2022" checked>"2022"</label>
      <label><input type="radio" name="version" value="2021">"2021"</label>
      </span>
      <span>NWP:
      <label><input type="radio" name="nwp" value="hrefsref" checked>HREF+SREF</label>
      <label><input type="radio" name="nwp" value="href">HREF only</label>
      </span>
      <span>Time:
      <label><input type="radio" name="run_time" value="0z" checked>0Z vs 0600</label>
      <label><input type="radio" name="run_time" value="12z">12Z vs 1630</label>
      </span>
      <span>Calibration:
      <label><input type="radio" name="calibration" value="spc-like" checked>SPC-like</label>
      <label><input type="radio" name="calibration" value="absolute">Absolute</label>
      </span>
      <span>Sig models:
      <label><input type="radio" name="sig_type" value="bounded" checked>Bounded by non-sig</label>
      <label><input type="radio" name="sig_type" value="naive" disabled><strike>Independent of non-sig</strike></label>
    </p>
    <script>
      function updateVisibility() {
        const kindsToShow   = Array.from(document.querySelectorAll('input[name="kind"]')).filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);
        const hazardsToShow = Array.from(document.querySelectorAll('input[name="hazard"]')).filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);
        // console.log(hazardsToShow);
        document.querySelectorAll('[data-kind-name]').forEach(elem => {
          if( kindsToShow.length === 0 || kindsToShow.includes(elem.dataset.kindName) ) {
            elem.classList.remove("hidden")
          } else {
            elem.classList.add("hidden")
          }
        });
        document.querySelectorAll('[data-hazard-name]').forEach(elem => {
          if( hazardsToShow.length === 0 || hazardsToShow.includes(elem.dataset.hazardName) ) {
            elem.classList.remove("hidden")
          } else {
            elem.classList.add("hidden")
          }
        });
      }
      function updateVersion() {
        const is_2022 = document.querySelector('input[name="version"][value="2022"]').checked;
        const prefix = is_2022 ? "plots/" : "plots_2021/";
        document.querySelectorAll('img').forEach(img => {
          img.src = img.src.replace(/plots(_2021)?\//, prefix);
        });
        document.querySelectorAll('td a').forEach(a => {
          a.href = a.href.replace(/plots(_2021)?\//, prefix);
        });
      }
      function updateRunTime() {
        const is12z = document.querySelector('input[name="run_time"][value="12z"]').checked;
        const time_suffix_nc  = is12z ? "_t12z.png" : "_t00z.png";
        // const time_suffix_spc = is12z ? "_t16z.png" : "_t06z.png";
        const time_str_nc  = is12z ? "12Z"  : "0Z";
        const time_str_spc = is12z ? "1630" : "0600";
        document.querySelectorAll('img').forEach(img => {
          img.src = img.src.replace(/_t\d+z\.png/, time_suffix_nc);
        });
        document.querySelectorAll('td a').forEach(a => {
          a.href = a.href.replace(/_t\d+z\.png/, time_suffix_nc);
        });
        document.querySelectorAll('.nc_run_time').forEach(elem => { elem.innerText = time_str_nc; });
        document.querySelectorAll('.spc_outlook_time').forEach(elem => { elem.innerText = time_str_spc; });
      }
      function updateNWP() {
        const hrefsref = document.querySelector('input[name="nwp"][value="hrefsref"]').checked;
        const sub = hrefsref ? "/$1$2_$4" : "/$1$2_href_only_$4";
        document.querySelectorAll('img').forEach(img => {
          img.src = img.src.replace(/\/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?_(\w+.png)/, sub);
        });
        document.querySelectorAll('td a').forEach(a => {
          a.href = a.href.replace(/\/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?_(\w+.png)/, sub);
        });
      }
      function updateCalibration() {
        const absolutely_calibrated = document.querySelector('input[name="calibration"][value="absolute"]').checked;
        const sub = absolutely_calibrated ? "/$1$2$3_absolutely_calibrated_$5" : "/$1$2$3_$5";
        document.querySelectorAll('img').forEach(img => {
          img.src = img.src.replace(/\/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(\w+.png)/, sub);
        });
        document.querySelectorAll('td a').forEach(a => {
          a.href = a.href.replace(/\/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(\w+.png)/, sub);
        });
      }
      document.querySelectorAll('input[name="hazard"],input[name="kind"]').forEach(checkbox => {
        checkbox.onchange = updateVisibility;
      })
      document.querySelectorAll('[name=version]').forEach(radio => {
        radio.onchange = updateVersion;
      })
      document.querySelectorAll('[name=nwp]').forEach(radio => {
        radio.onchange = updateNWP;
      })
      document.querySelectorAll('[name=run_time]').forEach(radio => {
        radio.onchange = updateRunTime;
      })
      document.querySelectorAll('[name=calibration]').forEach(radio => {
        radio.onchange = updateCalibration;
      })
    </script>
  </div>
  <%
    def version(plot)
      plot[/plots(_2021)?\//, 1] == "_2021" ? 2021 : 2022
    end
    def kind(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 1]
    end
    def spc?(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 2] == "_spc"
    end
    def nwp(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 3]
    end
    def absolutely_calibrated?(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 4] == "_absolutely_calibrated"
    end
    def hazard(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 5]
    end
    def bounded?(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 6]
    end
    def run_hour(plot)
      plot[/([a-z]+)(_nadocast|_spc)?(_href_only|_href_ablations)?(_absolutely_calibrated)?_(tornado|wind|wind_adj|hail|sig_tornado|sig_wind|sig_wind_adj|sig_hail|tornado_\w+_\d+)(_gated_by_\w+)?_t(\d+)z.png$/, 7]
    end
    def sig?(plot)
      hazard(plot) =~ /_sig_/
    end
    def plot_img(plot)
      plot && "<a href=\"#{plot}\" target=\"_blank\"><img loading=\"lazy\" src=\"#{plot}\"></a>"
    end
    plots = Dir.glob("plots/*.png")
  %>
  <div style="margin: 12em 0.5em" data-kind-name="performance">
    <p class="desc">
      <strong>Performance diagrams</strong> for Nadocast (NC) day 1 outlooks (triangles) compared to SPC day 1 outlooks (circles), for the 155 days (Sundays) not seen by the models during training and calibration throughout the Jan 2019-May 2021 period.
      Lines of constant critical success index (CSI) are drawn as light gray curves.
      The performance for the NC 1% threshold (2% wind and hail) is included as a gray triangle.
      Significant severe (EF2+, 65kn+, 2in+) 10% thresholds are drawn as large black symbols.
      The NC sig-severe models are bounded to never output probabilities higher than the NC non-sig probability.
      To assess statistical significance, for each threshold the difference between the NC and SPC CSI is compared across 1 million bootstrap resamples of the 155 days.
      The p value for NC CSI exceeding SPC SCI is shown; the NC triangle is drawn with solid fill when p<.05 (i.e. when NC is statistically more skillful).
    </p>
    <table>
      <tr>
        <% NONSIG_HAZARDS.each do |hazard_name, hazard_title|
          performance_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "performance" && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(performance_0z) %></td>
        <% end %>
      </tr>
      <tr>
        <% SIG_HAZARDS.each do |hazard_name, hazard_title|
          performance_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "performance" && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(performance_0z) %></td>
        <% end %>
      </tr>
    </table>
  </div>
  <div style="margin: 12em 0.5em" data-kind-name="reliability">
    <p class="desc">
      <strong>Reliability diagrams</strong> for Nadocast (NC) day 1 outlooks (triangles) compared to SPC day 1 outlooks (circles), for the 155 days (Sundays) not seen by the models during training and calibration throughout the Jan 2019-May 2021 period.
      The plots compare the forecast probability of an event to the observed frequency of at least one report within 25 miles.
      The 95% confidence interval for each bin is shaded, computed by bootstrapping over the 155 days.
      Ideal reliability is drawn as a dotted diagonal line; above the line is underforecasting, below is overforecasting.
    </p>
    <table>
      <tr>
        <% NONSIG_HAZARDS.each do |hazard_name, hazard_title|
          reliability_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "reliability" && !spc?(plot) && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(reliability_0z) %></td>
        <% end %>
      </tr>
      <tr>
        <% NONSIG_HAZARDS.each do |hazard_name, hazard_title|
          reliability_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "reliability" && spc?(plot) && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(reliability_0z) %></td>
        <% end %>
      </tr>
      <tr>
        <% SIG_HAZARDS.each do |hazard_name, hazard_title|
          reliability_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "reliability" && !spc?(plot) && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(reliability_0z) %></td>
        <% end %>
      </tr>
      <tr>
        <% SIG_HAZARDS.each do |hazard_name, hazard_title|
          reliability_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "reliability" && spc?(plot) && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(reliability_0z) %></td>
        <% end %>
      </tr>
    </table>
  </div>
  <div style="margin: 12em 0.5em" data-kind-name="roc">
    <p class="desc">
      <strong>Receiver operator characteristic (ROC) curves</strong> for Nadocast (NC) day 1 outlooks (triangles) compared to SPC day 1 outlooks (circles), for the 155 days (Sundays) not seen by the models during training and calibration throughout the Jan 2019-May 2021 period.
      Area under the curve (AUC) is shown. For rare events (as here), AUC is dominated by POD at the lowest threshold.
    </p>
    <table>
      <tr>
        <% NONSIG_HAZARDS.each do |hazard_name, hazard_title|
          roc_0z = plots.find { |plot| version(plot) == 2022 && kind(plot) == "roc" && hazard(plot) == hazard_name && run_hour(plot) == "00" && nwp(plot) == nil && !absolutely_calibrated?(plot) }
        %>
          <td data-hazard-name="<%= hazard_name %>"><%= plot_img(roc_0z) %></td>
        <% end %>
      </tr>
    </table>
  </div>
  <script>
    updateVisibility(); // this will also sort
    updateVersion();
    updateNWP();
    updateRunTime();
    updateCalibration();
  </script>
</body>

</html>
